{"version":3,"file":"static/js/set.098611c242859e9ea250.js","mappings":"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","sources":["webpack:///./js/set.js"],"sourcesContent":["import \"../sass/pages/set.scss\";\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  const flashcards = document.querySelector(\".flashcards\");\n\n  flashcards.addEventListener(\"click\", (event) => {\n    const flashcard = event.target.closest(\".flashcards__card\");\n    if (flashcard) {\n      flashcard.classList.toggle(\"flashcards__card-active\");\n    }\n  });\n\n  const flashcardData = {\n    title: \"\",\n    content: \"\",\n    frontImages: [],\n    frontAudio: null,\n    backImages: [],\n    backAudio: null,\n  };\n  const flashcardContructor = document.querySelector(\".constructor\");\n\n  flashcardContructor\n    .querySelectorAll(\".flashcard-side__text\")\n    .forEach((textarea) => {\n      textarea.addEventListener(\"input\", (e) => {\n        if (\n          e.target.value.endsWith(\"\\n\\n\") ||\n          parseFloat(e.target.scrollHeight) -\n            parseFloat(getComputedStyle(e.target).height) >\n            5\n        ) {\n          e.target.value = e.target.value.slice(0, -1);\n          return;\n        }\n        flashcardData[e.target.dataset.key] = e.target.value;\n        console.log(flashcardData);\n      });\n    });\n\n  flashcardContructor\n    .querySelectorAll(\".tool input[type=file]\")\n    .forEach((input) => {\n      input.addEventListener(\"change\", (e) => {\n        uploadFile(e, flashcardData);\n      });\n    });\n\n  flashcardContructor\n    .querySelectorAll(\"button[data-text-btn]\")\n    .forEach((btn) => {\n      btn.addEventListener(\"click\", () => {\n        const textEl =\n          btn.parentElement.previousElementSibling.lastElementChild;\n        textEl.classList.toggle(\"none\");\n        textEl.focus();\n      });\n    });\n\n  flashcardContructor\n    .querySelectorAll(\"button[data-upload-btn]\")\n    .forEach((btn) => {\n      btn.addEventListener(\"click\", () => {\n        btn.lastElementChild.click();\n      });\n    });\n});\n\nconst uploadFile = (event, flashcardData) => {\n  const dataKey = event.target.dataset.key;\n\n  if (dataKey.includes(\"Images\")) {\n    uploadImage(event, flashcardData, dataKey);\n  } else if (dataKey.includes(\"Audio\")) {\n    uploadSound(event, flashcardData, dataKey);\n  }\n};\nconst uploadImage = (event, flashcardData, flashcardDataKey) => {\n  const file = event.target.files[0];\n  if (!file) {\n    return;\n  }\n  if (![\"image/jpeg\", \"image/png\", \"image/svg+xml\"].includes(file.type)) {\n    alert(\"Choose another format. (JPEG, PNG, SVG)\");\n    event.target.value = \"\";\n    return;\n  }\n  const imagesContainer =\n    event.target.parentElement.parentElement.previousElementSibling\n      .firstElementChild;\n\n  // Check if no more than 3 images\n  if (imagesContainer.children.length >= 3 ) {\n    alert(\"Image limit has been reached!\");\n    event.target.value = \"\";\n    return;\n  }\n  const readerImage = new FileReader();\n  readerImage.onload = (event) => {\n    imagesContainer.insertAdjacentHTML(\n      \"beforeend\",\n      `\n    <img\n      class=\"flashcard-side__image\"\n      src=\"${event.target.result}\"\n    />\n    `\n    );\n    flashcardData[flashcardDataKey].push(file);\n  };\n  readerImage.onerror = function (e) {\n    alert(\"Error\");\n    console.log(e);\n  };\n  readerImage.readAsDataURL(file);\n};\n\nconst uploadSound = (event, flashcardData, flashcardDataKey) => {\n  const file = event.target.files[0];\n  if (!file) {\n    return;\n  }\n  if (![\"audio/mpeg\", \"audio/wav\", \"audio/ogg\"].includes(file.type)) {\n    alert(\"Choose another format. (MP3, WAV, OGG)\");\n    event.target.value = \"\";\n    return;\n  }\n  if (file.size > 1024 * 1024 * 10) {\n    alert(\"File size must be less than 10 MB\");\n    audioInput.value = \"\";\n    return;\n  }\n  const sideWorkspace = event.target.parentElement.parentElement.previousElementSibling;\n  const playSound = sideWorkspace.querySelector(\".flashcard-side__sound\");\n  // Check if no more than 1 audio\n  if (playSound.children.length >= 1 ) {\n    alert(\"Audio limit has been reached!\");\n    event.target.value = \"\";\n    return;\n  }\n\n  const readerSound = new FileReader();\n  readerSound.onload = (event) => {\n    const audio = new Audio(readerSound.result);\n    playSound.innerHTML = `<img src=\"./img/play-ico.svg\" alt=\"Play\">`;\n    flashcardData[flashcardDataKey] = file;\n\n    playSound.onclick = function () {\n      if (audio.paused) {\n        audio.play();\n        playSound.innerHTML = `<img src=\"./img/pause-ico.svg\" alt=\"Pause\">`;\n      } else {\n        audio.pause();\n        playSound.innerHTML = `<img src=\"./img/play-ico.svg\" alt=\"Play\">`;\n      }\n      };\n  };\n  readerSound.onerror = function (e) {\n    alert(\"Error\");\n  };\n  readerSound.readAsDataURL(file);\n};\n\nconst submitFlashCard = (event, flashcardSides, flashCardAttachments) => {\n  event.preventDefault();\n  const formData = new FormData();\n\n  const cardSetTitleEl = document.querySelector(\"h1\");\n\n  const cardsetId = +cardSetTitleEl.dataset.id;\n  formData.append(\"cardset_id\", cardsetId);\n\n  let errors = 0;\n\n  flashcardSides.forEach((side) => {\n    const sideName = side.dataset.type + \"Side\";\n    const textarea = side.querySelector(\".textarea\");\n    const sideText = textarea.textContent.trim();\n\n    if (\n      !sideText &&\n      !flashCardAttachments[sideName].images.length &&\n      !flashCardAttachments[sideName].audio\n    ) {\n      alert(\"Flash card side can not be empty!\");\n      errors += 1;\n      return;\n    }\n\n    formData.append(textarea.id.replace(\"textarea-\", \"\"), sideText);\n    textarea.innerHTML = \"\";\n    side.querySelector(\".image-preview\").innerHTML = \"\";\n  });\n\n  if (errors) {\n    return;\n  }\n\n  flashCardAttachments.frontSide.images.forEach((image) => {\n    formData.append(\"front_images\", image);\n  });\n  flashCardAttachments.backSide.images.forEach((image) => {\n    formData.append(\"back_images\", image);\n  });\n  flashCardAttachments.frontSide.audio &&\n    formData.append(\"front_audio\", flashCardAttachments.frontSide.audio);\n  flashCardAttachments.backSide.audio &&\n    formData.append(\"back_audio\", flashCardAttachments.backSide.audio);\n\n  fetch(\"/api/create-flashcard\", { method: \"POST\", body: formData }).then(\n    (response) => loadFlashCards(cardsetId)\n  );\n\n  event.target.reset();\n  for (const side in flashCardAttachments) {\n    flashCardAttachments[side] = {\n      images: [],\n      audio: null,\n    };\n  }\n  event.target.parentElement.classList.remove(\"transit\");\n};\n"],"names":["document","addEventListener","querySelector","event","flashcard","target","closest","classList","toggle","flashcardData","title","content","frontImages","frontAudio","backImages","backAudio","flashcardContructor","querySelectorAll","forEach","textarea","e","value","endsWith","parseFloat","scrollHeight","getComputedStyle","height","slice","dataset","key","console","log","input","uploadFile","btn","textEl","parentElement","previousElementSibling","lastElementChild","focus","click","dataKey","includes","uploadImage","uploadSound","flashcardDataKey","file","files","type","alert","imagesContainer","firstElementChild","children","length","readerImage","FileReader","onload","insertAdjacentHTML","result","push","onerror","readAsDataURL","size","audioInput","playSound","readerSound","audio","Audio","innerHTML","onclick","paused","play","pause"],"sourceRoot":""}